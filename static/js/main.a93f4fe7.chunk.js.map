{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","currentIndex","setCurrentIndex","className","style","width","transform","transition","map","image","index","height","src","alt","type","disabled","onClick","length","App","settings","setSettings","setInfinite","handleInputChange","event","target","name","value","prevSettings","htmlFor","id","onChange","placeholder","min","max","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a93f4fe7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Carousel.scss\";\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const prev = () => {\n    if (infinite) {\n      if (currentIndex !== 0) {\n        return setCurrentIndex(currentIndex - step);\n      }\n\n      return setCurrentIndex(images.length - 1);\n    }\n\n    return setCurrentIndex(currentIndex === 1 ? 0 : currentIndex - step);\n  };\n\n  const next = () => {\n    if (infinite) {\n      if (currentIndex + step < images.length) {\n        return setCurrentIndex(currentIndex + step);\n      }\n\n      return setCurrentIndex(0);\n    }\n\n    return setCurrentIndex(\n      currentIndex + step >= images.length\n        ? images.length - frameSize\n        : currentIndex + step,\n    );\n  };\n\n  return (\n    <div className=\"Carousel\" style={{ width: `${itemWidth * frameSize}px` }}>\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(-${currentIndex * itemWidth}px)`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li key={image} className=\"Carousel__item\">\n            <img\n              width={itemWidth}\n              height={itemWidth}\n              src={image}\n              alt={`${index + 1}`}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        disabled={!infinite && currentIndex < 1}\n        onClick={prev}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        data-cy=\"next\"\n        disabled={!infinite && currentIndex + step >= images.length}\n        onClick={next}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Carousel from \"./components/Carousel\";\n\nconst App: React.FC = () => {\n  const images = [\n    \"./img/1.png\",\n    \"./img/2.png\",\n    \"./img/3.png\",\n    \"./img/4.png\",\n    \"./img/5.png\",\n    \"./img/6.png\",\n    \"./img/7.png\",\n    \"./img/8.png\",\n    \"./img/9.png\",\n    \"./img/10.png\",\n  ];\n\n  const initialSettingsState = {\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  const [settings, setSettings] = useState(initialSettingsState);\n  const [infinite, setInfinite] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setSettings((prevSettings) => ({ ...prevSettings, [name]: value }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\" data-cy=\"title\">\n        Carousel with {images.length} images\n      </h1>\n\n      <div className=\"App__inputs\">\n        <label htmlFor=\"itemId\">\n          Item Width\n          <input\n            className=\"App__input\"\n            id=\"itemId\"\n            name=\"itemWidth\"\n            value={settings.itemWidth}\n            onChange={handleInputChange}\n            type=\"number\"\n            placeholder=\"Type item width\"\n            min={130}\n            step={10}\n            max={500}\n          />\n        </label>\n        <label htmlFor=\"frameId\">\n          Frame Size\n          <input\n            className=\"App__input\"\n            id=\"frameId\"\n            name=\"frameSize\"\n            value={settings.frameSize}\n            onChange={handleInputChange}\n            type=\"number\"\n            placeholder=\"Type frame size\"\n            min={1}\n            max={10}\n          />\n        </label>\n        <label htmlFor=\"stepId\">\n          Scroll Step\n          <input\n            className=\"App__input\"\n            id=\"stepId\"\n            name=\"step\"\n            value={settings.step}\n            onChange={handleInputChange}\n            type=\"number\"\n            placeholder=\"Type step\"\n            min={1}\n            max={9}\n          />\n        </label>\n        <label>\n          Duration\n          <input\n            className=\"App__input\"\n            value={settings.animationDuration}\n            name=\"animationDuration\"\n            onChange={handleInputChange}\n            type=\"number\"\n            placeholder=\"Type step\"\n            min={1000}\n            step={500}\n          />\n        </label>\n        <label>\n          Infinite\n          <input\n            className=\"App__input App__input--checkbox\"\n            onChange={() => {\n              setInfinite(!infinite);\n            }}\n            type=\"checkbox\"\n            checked={infinite}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        itemWidth={settings.itemWidth}\n        frameSize={settings.frameSize}\n        step={settings.step}\n        animationDuration={settings.animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}