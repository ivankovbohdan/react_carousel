{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","currentIndex","setCurrentIndex","className","style","width","transform","transition","map","image","index","height","src","alt","type","disabled","onClick","Math","ceil","length","App","setItemWidth","setFrameSize","setStep","setAnimationDuration","setInfinite","htmlFor","id","onChange","event","parseInt","target","value","placeholder","min","max","checked","ReactDOM","render","document","getElementById"],"mappings":"mMAsFeA,EA1EmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KA0BA,OACE,sBAAKC,UAAU,WAAWC,MAAO,CAAEC,MAAM,GAAD,OAAKV,EAAYC,EAAjB,OAAxC,UACE,oBACEO,UAAU,iBACVC,MAAO,CACLE,UAAU,eAAD,OAAiBL,EAAeJ,EAAOF,EAAvC,OACTY,WAAW,aAAD,OAAeT,EAAf,OAJd,SAOGJ,EAAOc,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBP,UAAU,iBAA1B,SACE,qBACEE,MAAOV,EACPgB,OAAQhB,EACRiB,IAAKH,EACLI,IAAG,UAAKH,EAAQ,MALXD,QAWb,wBACEK,KAAK,SACLC,UAAWhB,GAAYE,EAAe,EACtCe,QAhDO,WAGPd,EAFAH,EACEE,EAAe,EACDA,EAAe,EAEfgB,KAAKC,KAAKxB,EAAOyB,OAASvB,EAAY,GAGxCK,EAAe,IAqC/B,kBAOA,wBACEa,KAAK,SACL,UAAQ,OACRC,UAAWhB,GAAYE,EAAe,GAAKP,EAAOyB,OAASvB,EAC3DoB,QA5CO,WACPjB,EACEE,EAAe,GAAKP,EAAOyB,OAASvB,EACtCM,EAAgBD,EAAe,GAE/BC,EAAgB,GAGlBA,EAAgBD,EAAe,IAgC/B,sBCkCSmB,EAxGO,WACpB,IAAM1B,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGF,EAAkCM,mBAAS,KAA3C,mBAAOL,EAAP,KAAkB0B,EAAlB,KACA,EAAkCrB,mBAAS,GAA3C,mBAAOJ,EAAP,KAAkB0B,EAAlB,KACA,EAAwBtB,mBAAS,GAAjC,mBAAOH,EAAP,KAAa0B,EAAb,KACA,EAAkDvB,mBAAS,KAA3D,mBAAOF,EAAP,KAA0B0B,EAA1B,KACA,EAAgCxB,oBAAS,GAAzC,mBAAOD,EAAP,KAAiB0B,EAAjB,KAEA,OACE,sBAAKtB,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAa,UAAQ,QAAnC,2BACiBT,EAAOyB,OADxB,aAIA,sBAAKhB,UAAU,cAAf,UACE,wBAAOuB,QAAQ,SAAf,uBAEE,uBACEvB,UAAU,aACVwB,GAAG,SACHC,SAAU,SAACC,GACTR,EAAaS,SAASD,EAAME,OAAOC,MAAO,MAE5ClB,KAAK,SACLmB,YAAY,kBACZC,IAAK,SAGT,wBAAOR,QAAQ,UAAf,uBAEE,uBACEvB,UAAU,aACVwB,GAAG,UACHC,SAAU,SAACC,GACTP,EAAaQ,SAASD,EAAME,OAAOC,MAAO,MAE5ClB,KAAK,SACLmB,YAAY,kBACZC,IAAK,EACLC,IAAK,QAGT,wBAAOT,QAAQ,SAAf,wBAEE,uBACEvB,UAAU,aACVwB,GAAG,SACHC,SAAU,SAACC,GACTN,EAAQO,SAASD,EAAME,OAAOC,MAAO,MAEvClB,KAAK,SACLmB,YAAY,YACZC,IAAK,OAGT,6CAEE,uBACE/B,UAAU,aACVyB,SAAU,SAACC,GACTL,EAAqBM,SAASD,EAAME,OAAOC,MAAO,MAEpDlB,KAAK,SACLmB,YAAY,YACZC,IAAK,SAGT,6CAEE,uBACE/B,UAAU,kCACVyB,SAAU,WACRH,GAAa1B,IAEfe,KAAK,WACLsB,QAASrC,UAKf,cAAC,EAAD,CACEL,OAAQA,EACRC,UAAWA,EACXC,UAAWA,EACXC,KAAMA,EACNC,kBAAmBA,EACnBC,SAAUA,QCnGlBsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.9f6b4d5c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Carousel.scss\";\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const prev = () => {\n    if (infinite) {\n      if (currentIndex > 0) {\n        setCurrentIndex(currentIndex - 1);\n      } else {\n        setCurrentIndex(Math.ceil(images.length / frameSize - 1));\n      }\n    } else {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  const next = () => {\n    if (infinite) {\n      if (currentIndex + 1 <= images.length / frameSize) {\n        setCurrentIndex(currentIndex + 1);\n      } else {\n        setCurrentIndex(0);\n      }\n    } else {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\" style={{ width: `${itemWidth * frameSize}px` }}>\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(-${currentIndex * step * itemWidth}px)`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li key={image} className=\"Carousel__item\">\n            <img\n              width={itemWidth}\n              height={itemWidth}\n              src={image}\n              alt={`${index + 1}`}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        disabled={!infinite && currentIndex < 1}\n        onClick={prev}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        data-cy=\"next\"\n        disabled={!infinite && currentIndex + 1 >= images.length / frameSize}\n        onClick={next}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Carousel from \"./components/Carousel\";\n\nconst App: React.FC = () => {\n  const images = [\n    \"./img/1.png\",\n    \"./img/2.png\",\n    \"./img/3.png\",\n    \"./img/4.png\",\n    \"./img/5.png\",\n    \"./img/6.png\",\n    \"./img/7.png\",\n    \"./img/8.png\",\n    \"./img/9.png\",\n    \"./img/10.png\",\n  ];\n\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\" data-cy=\"title\">\n        Carousel with {images.length} images\n      </h1>\n\n      <div className=\"App__inputs\">\n        <label htmlFor=\"itemId\">\n          Item Width\n          <input\n            className=\"App__input\"\n            id=\"itemId\"\n            onChange={(event) => {\n              setItemWidth(parseInt(event.target.value, 10));\n            }}\n            type=\"number\"\n            placeholder=\"Type item width\"\n            min={130}\n          />\n        </label>\n        <label htmlFor=\"frameId\">\n          Frame Size\n          <input\n            className=\"App__input\"\n            id=\"frameId\"\n            onChange={(event) => {\n              setFrameSize(parseInt(event.target.value, 10));\n            }}\n            type=\"number\"\n            placeholder=\"Type frame size\"\n            min={1}\n            max={10}\n          />\n        </label>\n        <label htmlFor=\"stepId\">\n          Scroll Step\n          <input\n            className=\"App__input\"\n            id=\"stepId\"\n            onChange={(event) => {\n              setStep(parseInt(event.target.value, 10));\n            }}\n            type=\"number\"\n            placeholder=\"Type step\"\n            min={3}\n          />\n        </label>\n        <label>\n          Duration\n          <input\n            className=\"App__input\"\n            onChange={(event) => {\n              setAnimationDuration(parseInt(event.target.value, 10));\n            }}\n            type=\"number\"\n            placeholder=\"Type step\"\n            min={1000}\n          />\n        </label>\n        <label>\n          Infinite\n          <input\n            className=\"App__input App__input--checkbox\"\n            onChange={() => {\n              setInfinite(!infinite);\n            }}\n            type=\"checkbox\"\n            checked={infinite}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        frameSize={frameSize}\n        step={step}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}